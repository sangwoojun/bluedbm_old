//
// Generated by Bluespec Compiler, version 2014.03.beta2 (build 33633, 2014-03-26)
//
// On Tue Sep  9 02:14:31 EDT 2014
//
//
// Ports:
// Name                         I/O  size props
// portalIfc_ifcId                O    32
// RDY_portalIfc_ifcId            O     1 const
// portalIfc_ifcType              O    32 const
// RDY_portalIfc_ifcType          O     1 const
// RDY_portalIfc_requestSizeBits  O     1 const
// portalIfc_indications_0_first  O    32
// RDY_portalIfc_indications_0_first  O     1 reg
// RDY_portalIfc_indications_0_deq  O     1 reg
// portalIfc_indications_0_notEmpty  O     1 reg
// RDY_portalIfc_indications_0_notEmpty  O     1 const
// portalIfc_indications_1_first  O    32
// RDY_portalIfc_indications_1_first  O     1 reg
// RDY_portalIfc_indications_1_deq  O     1 reg
// portalIfc_indications_1_notEmpty  O     1 reg
// RDY_portalIfc_indications_1_notEmpty  O     1 const
// portalIfc_indications_2_first  O    32
// RDY_portalIfc_indications_2_first  O     1 reg
// RDY_portalIfc_indications_2_deq  O     1 reg
// portalIfc_indications_2_notEmpty  O     1 reg
// RDY_portalIfc_indications_2_notEmpty  O     1 const
// portalIfc_indications_3_first  O    32
// RDY_portalIfc_indications_3_first  O     1 reg
// RDY_portalIfc_indications_3_deq  O     1 reg
// portalIfc_indications_3_notEmpty  O     1 reg
// RDY_portalIfc_indications_3_notEmpty  O     1 const
// portalIfc_indicationSizeBits   O   128 const
// RDY_portalIfc_indicationSizeBits  O     1 const
// RDY_ifc_started                O     1 reg
// RDY_ifc_readDone               O     1 reg
// RDY_ifc_writeDone              O     1 reg
// RDY_ifc_hexDump                O     1 reg
// id                             I    32
// CLK                            I     1 clock
// RST_N                          I     1 reset
// ifc_readDone_tag               I    32 reg
// ifc_writeDone_tag              I    32 reg
// ifc_hexDump_data               I    32 reg
// EN_portalIfc_indications_0_deq  I     1
// EN_portalIfc_indications_1_deq  I     1
// EN_portalIfc_indications_2_deq  I     1
// EN_portalIfc_indications_3_deq  I     1
// EN_ifc_started                 I     1
// EN_ifc_readDone                I     1
// EN_ifc_writeDone               I     1
// EN_ifc_hexDump                 I     1
//
// Combinational paths from inputs to outputs:
//   id -> portalIfc_ifcId
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkFlashIndicationProxyPortalSynth(id,
					 CLK,
					 RST_N,

					 portalIfc_ifcId,
					 RDY_portalIfc_ifcId,

					 portalIfc_ifcType,
					 RDY_portalIfc_ifcType,

					 RDY_portalIfc_requestSizeBits,

					 portalIfc_indications_0_first,
					 RDY_portalIfc_indications_0_first,

					 EN_portalIfc_indications_0_deq,
					 RDY_portalIfc_indications_0_deq,

					 portalIfc_indications_0_notEmpty,
					 RDY_portalIfc_indications_0_notEmpty,

					 portalIfc_indications_1_first,
					 RDY_portalIfc_indications_1_first,

					 EN_portalIfc_indications_1_deq,
					 RDY_portalIfc_indications_1_deq,

					 portalIfc_indications_1_notEmpty,
					 RDY_portalIfc_indications_1_notEmpty,

					 portalIfc_indications_2_first,
					 RDY_portalIfc_indications_2_first,

					 EN_portalIfc_indications_2_deq,
					 RDY_portalIfc_indications_2_deq,

					 portalIfc_indications_2_notEmpty,
					 RDY_portalIfc_indications_2_notEmpty,

					 portalIfc_indications_3_first,
					 RDY_portalIfc_indications_3_first,

					 EN_portalIfc_indications_3_deq,
					 RDY_portalIfc_indications_3_deq,

					 portalIfc_indications_3_notEmpty,
					 RDY_portalIfc_indications_3_notEmpty,

					 portalIfc_indicationSizeBits,
					 RDY_portalIfc_indicationSizeBits,

					 EN_ifc_started,
					 RDY_ifc_started,

					 ifc_readDone_tag,
					 EN_ifc_readDone,
					 RDY_ifc_readDone,

					 ifc_writeDone_tag,
					 EN_ifc_writeDone,
					 RDY_ifc_writeDone,

					 ifc_hexDump_data,
					 EN_ifc_hexDump,
					 RDY_ifc_hexDump);
  input  [31 : 0] id;
  input  CLK;
  input  RST_N;

  // value method portalIfc_ifcId
  output [31 : 0] portalIfc_ifcId;
  output RDY_portalIfc_ifcId;

  // value method portalIfc_ifcType
  output [31 : 0] portalIfc_ifcType;
  output RDY_portalIfc_ifcType;

  // value method portalIfc_requestSizeBits
  output RDY_portalIfc_requestSizeBits;

  // value method portalIfc_indications_0_first
  output [31 : 0] portalIfc_indications_0_first;
  output RDY_portalIfc_indications_0_first;

  // action method portalIfc_indications_0_deq
  input  EN_portalIfc_indications_0_deq;
  output RDY_portalIfc_indications_0_deq;

  // value method portalIfc_indications_0_notEmpty
  output portalIfc_indications_0_notEmpty;
  output RDY_portalIfc_indications_0_notEmpty;

  // value method portalIfc_indications_1_first
  output [31 : 0] portalIfc_indications_1_first;
  output RDY_portalIfc_indications_1_first;

  // action method portalIfc_indications_1_deq
  input  EN_portalIfc_indications_1_deq;
  output RDY_portalIfc_indications_1_deq;

  // value method portalIfc_indications_1_notEmpty
  output portalIfc_indications_1_notEmpty;
  output RDY_portalIfc_indications_1_notEmpty;

  // value method portalIfc_indications_2_first
  output [31 : 0] portalIfc_indications_2_first;
  output RDY_portalIfc_indications_2_first;

  // action method portalIfc_indications_2_deq
  input  EN_portalIfc_indications_2_deq;
  output RDY_portalIfc_indications_2_deq;

  // value method portalIfc_indications_2_notEmpty
  output portalIfc_indications_2_notEmpty;
  output RDY_portalIfc_indications_2_notEmpty;

  // value method portalIfc_indications_3_first
  output [31 : 0] portalIfc_indications_3_first;
  output RDY_portalIfc_indications_3_first;

  // action method portalIfc_indications_3_deq
  input  EN_portalIfc_indications_3_deq;
  output RDY_portalIfc_indications_3_deq;

  // value method portalIfc_indications_3_notEmpty
  output portalIfc_indications_3_notEmpty;
  output RDY_portalIfc_indications_3_notEmpty;

  // value method portalIfc_indicationSizeBits
  output [127 : 0] portalIfc_indicationSizeBits;
  output RDY_portalIfc_indicationSizeBits;

  // action method ifc_started
  input  EN_ifc_started;
  output RDY_ifc_started;

  // action method ifc_readDone
  input  [31 : 0] ifc_readDone_tag;
  input  EN_ifc_readDone;
  output RDY_ifc_readDone;

  // action method ifc_writeDone
  input  [31 : 0] ifc_writeDone_tag;
  input  EN_ifc_writeDone;
  output RDY_ifc_writeDone;

  // action method ifc_hexDump
  input  [31 : 0] ifc_hexDump_data;
  input  EN_ifc_hexDump;
  output RDY_ifc_hexDump;

  // signals for module outputs
  wire [127 : 0] portalIfc_indicationSizeBits;
  wire [31 : 0] portalIfc_ifcId,
		portalIfc_ifcType,
		portalIfc_indications_0_first,
		portalIfc_indications_1_first,
		portalIfc_indications_2_first,
		portalIfc_indications_3_first;
  wire RDY_ifc_hexDump,
       RDY_ifc_readDone,
       RDY_ifc_started,
       RDY_ifc_writeDone,
       RDY_portalIfc_ifcId,
       RDY_portalIfc_ifcType,
       RDY_portalIfc_indicationSizeBits,
       RDY_portalIfc_indications_0_deq,
       RDY_portalIfc_indications_0_first,
       RDY_portalIfc_indications_0_notEmpty,
       RDY_portalIfc_indications_1_deq,
       RDY_portalIfc_indications_1_first,
       RDY_portalIfc_indications_1_notEmpty,
       RDY_portalIfc_indications_2_deq,
       RDY_portalIfc_indications_2_first,
       RDY_portalIfc_indications_2_notEmpty,
       RDY_portalIfc_indications_3_deq,
       RDY_portalIfc_indications_3_first,
       RDY_portalIfc_indications_3_notEmpty,
       RDY_portalIfc_requestSizeBits,
       portalIfc_indications_0_notEmpty,
       portalIfc_indications_1_notEmpty,
       portalIfc_indications_2_notEmpty,
       portalIfc_indications_3_notEmpty;

  // register hexDump_responseFifo_count
  reg [31 : 0] hexDump_responseFifo_count;
  wire [31 : 0] hexDump_responseFifo_count_D_IN;
  wire hexDump_responseFifo_count_EN;

  // register readDone_responseFifo_count
  reg [31 : 0] readDone_responseFifo_count;
  wire [31 : 0] readDone_responseFifo_count_D_IN;
  wire readDone_responseFifo_count_EN;

  // register started_responseFifo_count
  reg [31 : 0] started_responseFifo_count;
  wire [31 : 0] started_responseFifo_count_D_IN;
  wire started_responseFifo_count_EN;

  // register writeDone_responseFifo_count
  reg [31 : 0] writeDone_responseFifo_count;
  wire [31 : 0] writeDone_responseFifo_count_D_IN;
  wire writeDone_responseFifo_count_EN;

  // ports of submodule hexDump_responseFifo_fifo
  wire [31 : 0] hexDump_responseFifo_fifo_D_IN,
		hexDump_responseFifo_fifo_D_OUT;
  wire hexDump_responseFifo_fifo_CLR,
       hexDump_responseFifo_fifo_DEQ,
       hexDump_responseFifo_fifo_EMPTY_N,
       hexDump_responseFifo_fifo_ENQ,
       hexDump_responseFifo_fifo_FULL_N;

  // ports of submodule readDone_responseFifo_fifo
  wire [31 : 0] readDone_responseFifo_fifo_D_IN,
		readDone_responseFifo_fifo_D_OUT;
  wire readDone_responseFifo_fifo_CLR,
       readDone_responseFifo_fifo_DEQ,
       readDone_responseFifo_fifo_EMPTY_N,
       readDone_responseFifo_fifo_ENQ,
       readDone_responseFifo_fifo_FULL_N;

  // ports of submodule started_responseFifo_fifo
  wire [31 : 0] started_responseFifo_fifo_D_IN,
		started_responseFifo_fifo_D_OUT;
  wire started_responseFifo_fifo_CLR,
       started_responseFifo_fifo_DEQ,
       started_responseFifo_fifo_EMPTY_N,
       started_responseFifo_fifo_ENQ,
       started_responseFifo_fifo_FULL_N;

  // ports of submodule writeDone_responseFifo_fifo
  wire [31 : 0] writeDone_responseFifo_fifo_D_IN,
		writeDone_responseFifo_fifo_D_OUT;
  wire writeDone_responseFifo_fifo_CLR,
       writeDone_responseFifo_fifo_DEQ,
       writeDone_responseFifo_fifo_EMPTY_N,
       writeDone_responseFifo_fifo_ENQ,
       writeDone_responseFifo_fifo_FULL_N;

  // remaining internal signals
  wire [31 : 0] x__h1004,
		x__h1072,
		x__h1129,
		x__h1197,
		x__h1254,
		x__h822,
		x__h879,
		x__h947;

  // value method portalIfc_ifcId
  assign portalIfc_ifcId = id ;
  assign RDY_portalIfc_ifcId = 1'd1 ;

  // value method portalIfc_ifcType
  assign portalIfc_ifcType = 32'hE1220BBC ;
  assign RDY_portalIfc_ifcType = 1'd1 ;

  // value method portalIfc_requestSizeBits
  assign RDY_portalIfc_requestSizeBits = 1'd1 ;

  // value method portalIfc_indications_0_first
  assign portalIfc_indications_0_first =
	     started_responseFifo_fifo_D_OUT << x__h822 ;
  assign RDY_portalIfc_indications_0_first =
	     started_responseFifo_fifo_EMPTY_N ;

  // action method portalIfc_indications_0_deq
  assign RDY_portalIfc_indications_0_deq = started_responseFifo_fifo_EMPTY_N ;

  // value method portalIfc_indications_0_notEmpty
  assign portalIfc_indications_0_notEmpty =
	     started_responseFifo_fifo_EMPTY_N ;
  assign RDY_portalIfc_indications_0_notEmpty = 1'd1 ;

  // value method portalIfc_indications_1_first
  assign portalIfc_indications_1_first =
	     readDone_responseFifo_fifo_D_OUT << x__h947 ;
  assign RDY_portalIfc_indications_1_first =
	     readDone_responseFifo_fifo_EMPTY_N ;

  // action method portalIfc_indications_1_deq
  assign RDY_portalIfc_indications_1_deq =
	     readDone_responseFifo_fifo_EMPTY_N ;

  // value method portalIfc_indications_1_notEmpty
  assign portalIfc_indications_1_notEmpty =
	     readDone_responseFifo_fifo_EMPTY_N ;
  assign RDY_portalIfc_indications_1_notEmpty = 1'd1 ;

  // value method portalIfc_indications_2_first
  assign portalIfc_indications_2_first =
	     writeDone_responseFifo_fifo_D_OUT << x__h1072 ;
  assign RDY_portalIfc_indications_2_first =
	     writeDone_responseFifo_fifo_EMPTY_N ;

  // action method portalIfc_indications_2_deq
  assign RDY_portalIfc_indications_2_deq =
	     writeDone_responseFifo_fifo_EMPTY_N ;

  // value method portalIfc_indications_2_notEmpty
  assign portalIfc_indications_2_notEmpty =
	     writeDone_responseFifo_fifo_EMPTY_N ;
  assign RDY_portalIfc_indications_2_notEmpty = 1'd1 ;

  // value method portalIfc_indications_3_first
  assign portalIfc_indications_3_first =
	     hexDump_responseFifo_fifo_D_OUT << x__h1197 ;
  assign RDY_portalIfc_indications_3_first =
	     hexDump_responseFifo_fifo_EMPTY_N ;

  // action method portalIfc_indications_3_deq
  assign RDY_portalIfc_indications_3_deq = hexDump_responseFifo_fifo_EMPTY_N ;

  // value method portalIfc_indications_3_notEmpty
  assign portalIfc_indications_3_notEmpty =
	     hexDump_responseFifo_fifo_EMPTY_N ;
  assign RDY_portalIfc_indications_3_notEmpty = 1'd1 ;

  // value method portalIfc_indicationSizeBits
  assign portalIfc_indicationSizeBits =
	     128'h00000020000000200000002000000020 ;
  assign RDY_portalIfc_indicationSizeBits = 1'd1 ;

  // action method ifc_started
  assign RDY_ifc_started = started_responseFifo_fifo_FULL_N ;

  // action method ifc_readDone
  assign RDY_ifc_readDone = readDone_responseFifo_fifo_FULL_N ;

  // action method ifc_writeDone
  assign RDY_ifc_writeDone = writeDone_responseFifo_fifo_FULL_N ;

  // action method ifc_hexDump
  assign RDY_ifc_hexDump = hexDump_responseFifo_fifo_FULL_N ;

  // submodule hexDump_responseFifo_fifo
  FIFO1 #(.width(32'd32),
	  .guarded(32'd1)) hexDump_responseFifo_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(hexDump_responseFifo_fifo_D_IN),
						     .ENQ(hexDump_responseFifo_fifo_ENQ),
						     .DEQ(hexDump_responseFifo_fifo_DEQ),
						     .CLR(hexDump_responseFifo_fifo_CLR),
						     .D_OUT(hexDump_responseFifo_fifo_D_OUT),
						     .FULL_N(hexDump_responseFifo_fifo_FULL_N),
						     .EMPTY_N(hexDump_responseFifo_fifo_EMPTY_N));

  // submodule readDone_responseFifo_fifo
  FIFO1 #(.width(32'd32),
	  .guarded(32'd1)) readDone_responseFifo_fifo(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(readDone_responseFifo_fifo_D_IN),
						      .ENQ(readDone_responseFifo_fifo_ENQ),
						      .DEQ(readDone_responseFifo_fifo_DEQ),
						      .CLR(readDone_responseFifo_fifo_CLR),
						      .D_OUT(readDone_responseFifo_fifo_D_OUT),
						      .FULL_N(readDone_responseFifo_fifo_FULL_N),
						      .EMPTY_N(readDone_responseFifo_fifo_EMPTY_N));

  // submodule started_responseFifo_fifo
  FIFO1 #(.width(32'd32),
	  .guarded(32'd1)) started_responseFifo_fifo(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(started_responseFifo_fifo_D_IN),
						     .ENQ(started_responseFifo_fifo_ENQ),
						     .DEQ(started_responseFifo_fifo_DEQ),
						     .CLR(started_responseFifo_fifo_CLR),
						     .D_OUT(started_responseFifo_fifo_D_OUT),
						     .FULL_N(started_responseFifo_fifo_FULL_N),
						     .EMPTY_N(started_responseFifo_fifo_EMPTY_N));

  // submodule writeDone_responseFifo_fifo
  FIFO1 #(.width(32'd32),
	  .guarded(32'd1)) writeDone_responseFifo_fifo(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(writeDone_responseFifo_fifo_D_IN),
						       .ENQ(writeDone_responseFifo_fifo_ENQ),
						       .DEQ(writeDone_responseFifo_fifo_DEQ),
						       .CLR(writeDone_responseFifo_fifo_CLR),
						       .D_OUT(writeDone_responseFifo_fifo_D_OUT),
						       .FULL_N(writeDone_responseFifo_fifo_FULL_N),
						       .EMPTY_N(writeDone_responseFifo_fifo_EMPTY_N));

  // register hexDump_responseFifo_count
  assign hexDump_responseFifo_count_D_IN =
	     (hexDump_responseFifo_count == 32'd0) ?
	       hexDump_responseFifo_count :
	       x__h1254 ;
  assign hexDump_responseFifo_count_EN = EN_portalIfc_indications_3_deq ;

  // register readDone_responseFifo_count
  assign readDone_responseFifo_count_D_IN =
	     (readDone_responseFifo_count == 32'd0) ?
	       readDone_responseFifo_count :
	       x__h1004 ;
  assign readDone_responseFifo_count_EN = EN_portalIfc_indications_1_deq ;

  // register started_responseFifo_count
  assign started_responseFifo_count_D_IN =
	     (started_responseFifo_count == 32'd0) ?
	       started_responseFifo_count :
	       x__h879 ;
  assign started_responseFifo_count_EN = EN_portalIfc_indications_0_deq ;

  // register writeDone_responseFifo_count
  assign writeDone_responseFifo_count_D_IN =
	     (writeDone_responseFifo_count == 32'd0) ?
	       writeDone_responseFifo_count :
	       x__h1129 ;
  assign writeDone_responseFifo_count_EN = EN_portalIfc_indications_2_deq ;

  // submodule hexDump_responseFifo_fifo
  assign hexDump_responseFifo_fifo_D_IN = ifc_hexDump_data ;
  assign hexDump_responseFifo_fifo_ENQ = EN_ifc_hexDump ;
  assign hexDump_responseFifo_fifo_DEQ =
	     EN_portalIfc_indications_3_deq &&
	     hexDump_responseFifo_count == 32'd0 ;
  assign hexDump_responseFifo_fifo_CLR = 1'b0 ;

  // submodule readDone_responseFifo_fifo
  assign readDone_responseFifo_fifo_D_IN = ifc_readDone_tag ;
  assign readDone_responseFifo_fifo_ENQ = EN_ifc_readDone ;
  assign readDone_responseFifo_fifo_DEQ =
	     EN_portalIfc_indications_1_deq &&
	     readDone_responseFifo_count == 32'd0 ;
  assign readDone_responseFifo_fifo_CLR = 1'b0 ;

  // submodule started_responseFifo_fifo
  assign started_responseFifo_fifo_D_IN = 32'd0 ;
  assign started_responseFifo_fifo_ENQ = EN_ifc_started ;
  assign started_responseFifo_fifo_DEQ =
	     EN_portalIfc_indications_0_deq &&
	     started_responseFifo_count == 32'd0 ;
  assign started_responseFifo_fifo_CLR = 1'b0 ;

  // submodule writeDone_responseFifo_fifo
  assign writeDone_responseFifo_fifo_D_IN = ifc_writeDone_tag ;
  assign writeDone_responseFifo_fifo_ENQ = EN_ifc_writeDone ;
  assign writeDone_responseFifo_fifo_DEQ =
	     EN_portalIfc_indications_2_deq &&
	     writeDone_responseFifo_count == 32'd0 ;
  assign writeDone_responseFifo_fifo_CLR = 1'b0 ;

  // remaining internal signals
  assign x__h1004 = readDone_responseFifo_count + 32'd1 ;
  assign x__h1072 = { writeDone_responseFifo_count[26:0], 5'd0 } ;
  assign x__h1129 = writeDone_responseFifo_count + 32'd1 ;
  assign x__h1197 = { hexDump_responseFifo_count[26:0], 5'd0 } ;
  assign x__h1254 = hexDump_responseFifo_count + 32'd1 ;
  assign x__h822 = { started_responseFifo_count[26:0], 5'd0 } ;
  assign x__h879 = started_responseFifo_count + 32'd1 ;
  assign x__h947 = { readDone_responseFifo_count[26:0], 5'd0 } ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        hexDump_responseFifo_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	readDone_responseFifo_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	started_responseFifo_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	writeDone_responseFifo_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
      end
    else
      begin
        if (hexDump_responseFifo_count_EN)
	  hexDump_responseFifo_count <= `BSV_ASSIGNMENT_DELAY
	      hexDump_responseFifo_count_D_IN;
	if (readDone_responseFifo_count_EN)
	  readDone_responseFifo_count <= `BSV_ASSIGNMENT_DELAY
	      readDone_responseFifo_count_D_IN;
	if (started_responseFifo_count_EN)
	  started_responseFifo_count <= `BSV_ASSIGNMENT_DELAY
	      started_responseFifo_count_D_IN;
	if (writeDone_responseFifo_count_EN)
	  writeDone_responseFifo_count <= `BSV_ASSIGNMENT_DELAY
	      writeDone_responseFifo_count_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    hexDump_responseFifo_count = 32'hAAAAAAAA;
    readDone_responseFifo_count = 32'hAAAAAAAA;
    started_responseFifo_count = 32'hAAAAAAAA;
    writeDone_responseFifo_count = 32'hAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkFlashIndicationProxyPortalSynth

