//
// Generated by Bluespec Compiler, version 2014.03.beta2 (build 33633, 2014-03-26)
//
// On Tue Sep  9 02:13:50 EDT 2014
//
//
// Ports:
// Name                         I/O  size props
// CLK_aurora_clk_gtx_clk_p_deleteme_unused_clock  O     1 clock
// CLK_GATE_aurora_clk_gtx_clk_p_deleteme_unused_clock  O     1 const
// CLK_aurora_clk_gtx_clk_n_deleteme_unused_clock  O     1 clock
// CLK_GATE_aurora_clk_gtx_clk_n_deleteme_unused_clock  O     1 const
// CLK_gtx_clk_p_ifc              O     1 clock
// CLK_GATE_gtx_clk_p_ifc         O     1 const
// CLK_gtx_clk_n_ifc              O     1 clock
// CLK_GATE_gtx_clk_n_ifc         O     1 const
// CLK                            I     1 unused
// RST_N                          I     1 unused
// aurora_clk_gtx_clk_p_v         I     1
// aurora_clk_gtx_clk_n_v         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkGtxClockImport(CLK,
			RST_N,

			aurora_clk_gtx_clk_p_v,

			aurora_clk_gtx_clk_n_v,

			CLK_aurora_clk_gtx_clk_p_deleteme_unused_clock,
			CLK_GATE_aurora_clk_gtx_clk_p_deleteme_unused_clock,

			CLK_aurora_clk_gtx_clk_n_deleteme_unused_clock,
			CLK_GATE_aurora_clk_gtx_clk_n_deleteme_unused_clock,

			CLK_gtx_clk_p_ifc,
			CLK_GATE_gtx_clk_p_ifc,

			CLK_gtx_clk_n_ifc,
			CLK_GATE_gtx_clk_n_ifc);
  input  CLK;
  input  RST_N;

  // action method aurora_clk_gtx_clk_p
  input  aurora_clk_gtx_clk_p_v;

  // action method aurora_clk_gtx_clk_n
  input  aurora_clk_gtx_clk_n_v;

  // oscillator and gates for output clock CLK_aurora_clk_gtx_clk_p_deleteme_unused_clock
  output CLK_aurora_clk_gtx_clk_p_deleteme_unused_clock;
  output CLK_GATE_aurora_clk_gtx_clk_p_deleteme_unused_clock;

  // oscillator and gates for output clock CLK_aurora_clk_gtx_clk_n_deleteme_unused_clock
  output CLK_aurora_clk_gtx_clk_n_deleteme_unused_clock;
  output CLK_GATE_aurora_clk_gtx_clk_n_deleteme_unused_clock;

  // oscillator and gates for output clock CLK_gtx_clk_p_ifc
  output CLK_gtx_clk_p_ifc;
  output CLK_GATE_gtx_clk_p_ifc;

  // oscillator and gates for output clock CLK_gtx_clk_n_ifc
  output CLK_gtx_clk_n_ifc;
  output CLK_GATE_gtx_clk_n_ifc;

  // signals for module outputs
  wire CLK_GATE_aurora_clk_gtx_clk_n_deleteme_unused_clock,
       CLK_GATE_aurora_clk_gtx_clk_p_deleteme_unused_clock,
       CLK_GATE_gtx_clk_n_ifc,
       CLK_GATE_gtx_clk_p_ifc,
       CLK_aurora_clk_gtx_clk_n_deleteme_unused_clock,
       CLK_aurora_clk_gtx_clk_p_deleteme_unused_clock,
       CLK_gtx_clk_n_ifc,
       CLK_gtx_clk_p_ifc;

  // ports of submodule i_gtx_clk_n
  wire i_gtx_clk_n_IN1, i_gtx_clk_n_IN2, i_gtx_clk_n_OUT1;

  // ports of submodule i_gtx_clk_p
  wire i_gtx_clk_p_IN1, i_gtx_clk_p_IN2, i_gtx_clk_p_OUT1;

  // oscillator and gates for output clock CLK_aurora_clk_gtx_clk_p_deleteme_unused_clock
  assign CLK_aurora_clk_gtx_clk_p_deleteme_unused_clock = i_gtx_clk_p_OUT1 ;
  assign CLK_GATE_aurora_clk_gtx_clk_p_deleteme_unused_clock = 1'b1 ;

  // oscillator and gates for output clock CLK_aurora_clk_gtx_clk_n_deleteme_unused_clock
  assign CLK_aurora_clk_gtx_clk_n_deleteme_unused_clock = i_gtx_clk_n_OUT1 ;
  assign CLK_GATE_aurora_clk_gtx_clk_n_deleteme_unused_clock = 1'b1 ;

  // oscillator and gates for output clock CLK_gtx_clk_p_ifc
  assign CLK_gtx_clk_p_ifc = i_gtx_clk_p_OUT1 ;
  assign CLK_GATE_gtx_clk_p_ifc = 1'b1 ;

  // oscillator and gates for output clock CLK_gtx_clk_n_ifc
  assign CLK_gtx_clk_n_ifc = i_gtx_clk_n_OUT1 ;
  assign CLK_GATE_gtx_clk_n_ifc = 1'b1 ;

  // submodule i_gtx_clk_n
  CONNECTNET2 i_gtx_clk_n(.IN1(i_gtx_clk_n_IN1),
			  .IN2(i_gtx_clk_n_IN2),
			  .OUT1(i_gtx_clk_n_OUT1),
			  .OUT2());

  // submodule i_gtx_clk_p
  CONNECTNET2 i_gtx_clk_p(.IN1(i_gtx_clk_p_IN1),
			  .IN2(i_gtx_clk_p_IN2),
			  .OUT1(i_gtx_clk_p_OUT1),
			  .OUT2());

  // submodule i_gtx_clk_n
  assign i_gtx_clk_n_IN1 = aurora_clk_gtx_clk_n_v ;
  assign i_gtx_clk_n_IN2 = 1'b0 ;

  // submodule i_gtx_clk_p
  assign i_gtx_clk_p_IN1 = aurora_clk_gtx_clk_p_v ;
  assign i_gtx_clk_p_IN2 = 1'b0 ;
endmodule  // mkGtxClockImport

