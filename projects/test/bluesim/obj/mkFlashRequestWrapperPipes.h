/*
 * Generated by Bluespec Compiler, version 2014.03.beta2 (build 33633, 2014-03-26)
 * 
 * On Tue Sep  9 03:11:42 EDT 2014
 * 
 */

/* Generation options: */
#ifndef __mkFlashRequestWrapperPipes_h__
#define __mkFlashRequestWrapperPipes_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkFlashRequestWrapperPipes module */
class MOD_mkFlashRequestWrapperPipes : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_addReadHostBuffer_requestFifo_count;
  MOD_Reg<tUInt64> INST_addReadHostBuffer_requestFifo_fbnbuff;
  MOD_Fifo<tUInt64> INST_addReadHostBuffer_requestFifo_fifo;
  MOD_Reg<tUInt32> INST_addWriteHostBuffer_requestFifo_count;
  MOD_Reg<tUInt64> INST_addWriteHostBuffer_requestFifo_fbnbuff;
  MOD_Fifo<tUInt64> INST_addWriteHostBuffer_requestFifo_fifo;
  MOD_Reg<tUInt32> INST_readPage_requestFifo_count;
  MOD_Reg<tUWide> INST_readPage_requestFifo_fbnbuff;
  MOD_Fifo<tUWide> INST_readPage_requestFifo_fifo;
  MOD_Reg<tUInt32> INST_sendTest_requestFifo_count;
  MOD_Reg<tUInt32> INST_sendTest_requestFifo_fbnbuff;
  MOD_Fifo<tUInt32> INST_sendTest_requestFifo_fifo;
  MOD_Reg<tUInt32> INST_startCopy_requestFifo_count;
  MOD_Reg<tUWide> INST_startCopy_requestFifo_fbnbuff;
  MOD_Fifo<tUWide> INST_startCopy_requestFifo_fifo;
  MOD_Reg<tUInt32> INST_writePage_requestFifo_count;
  MOD_Reg<tUWide> INST_writePage_requestFifo_fbnbuff;
  MOD_Fifo<tUWide> INST_writePage_requestFifo_fifo;
 
 /* Constructor */
 public:
  MOD_mkFlashRequestWrapperPipes(tSimStateHdl simHdl,
				 char const *name,
				 Module *parent,
				 tUInt32 ARG_id);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt32 PORT_id;
  tUWide PORT_requestSizeBits;
  tUWide PORT_startCopy_PipeOut_first;
  tUWide PORT_readPage_PipeOut_first;
  tUWide PORT_writePage_PipeOut_first;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_addReadHostBuffer_requestFifo_fifo_i_notEmpty____d79;
  tUInt8 DEF_addWriteHostBuffer_requestFifo_fifo_i_notEmpty____d78;
  tUInt8 DEF_sendTest_requestFifo_fifo_i_notEmpty____d77;
  tUInt8 DEF_writePage_requestFifo_fifo_i_notEmpty____d76;
  tUInt8 DEF_readPage_requestFifo_fifo_i_notEmpty____d75;
  tUInt8 DEF_startCopy_requestFifo_fifo_i_notEmpty____d74;
  tUInt8 DEF_sendTest_requestFifo_fifo_notFull____d44;
  tUInt32 DEF__read__h1178;
  tUInt32 DEF__read__h972;
  tUInt32 DEF__read__h766;
  tUInt32 DEF__read__h557;
  tUInt32 DEF__read__h351;
  tUInt32 DEF__read__h145;
  tUInt8 DEF_addReadHostBuffer_requestFifo_fifo_notFull____d69;
  tUInt8 DEF_addWriteHostBuffer_requestFifo_fifo_notFull____d56;
  tUInt8 DEF_writePage_requestFifo_fifo_notFull____d35;
  tUInt8 DEF_readPage_requestFifo_fifo_notFull____d22;
  tUInt8 DEF_startCopy_requestFifo_fifo_notFull____d9;
  tUInt8 DEF_addReadHostBuffer_requestFifo_count_4_EQ_1___d65;
  tUInt8 DEF_addWriteHostBuffer_requestFifo_count_1_EQ_1___d52;
  tUInt8 DEF_sendTest_requestFifo_count_0_EQ_0___d41;
  tUInt8 DEF_writePage_requestFifo_count_0_EQ_4___d31;
  tUInt8 DEF_readPage_requestFifo_count_7_EQ_4___d18;
  tUInt8 DEF_startCopy_requestFifo_count_EQ_4___d5;
 
 /* Local definitions */
 private:
  tUWide DEF__read__h508;
  tUWide DEF__read__h302;
  tUWide DEF__read__h96;
  tUWide DEF__read_BITS_127_TO_0___h1750;
  tUWide DEF__read_BITS_127_TO_0___h1502;
  tUWide DEF__read_BITS_127_TO_0___h1626;
  tUWide DEF_newbuff__h1723;
  tUWide DEF_newbuff__h1475;
  tUWide DEF_newbuff__h1599;
 
 /* Rules */
 public:
 
 /* Methods */
 public:
  tUWide METH_requestSizeBits();
  tUInt8 METH_RDY_requestSizeBits();
  void METH_inputPipes_0_enq(tUInt32 ARG_inputPipes_0_enq_v);
  tUInt8 METH_RDY_inputPipes_0_enq();
  tUInt8 METH_inputPipes_0_notFull();
  tUInt8 METH_RDY_inputPipes_0_notFull();
  void METH_inputPipes_1_enq(tUInt32 ARG_inputPipes_1_enq_v);
  tUInt8 METH_RDY_inputPipes_1_enq();
  tUInt8 METH_inputPipes_1_notFull();
  tUInt8 METH_RDY_inputPipes_1_notFull();
  void METH_inputPipes_2_enq(tUInt32 ARG_inputPipes_2_enq_v);
  tUInt8 METH_RDY_inputPipes_2_enq();
  tUInt8 METH_inputPipes_2_notFull();
  tUInt8 METH_RDY_inputPipes_2_notFull();
  void METH_inputPipes_3_enq(tUInt32 ARG_inputPipes_3_enq_v);
  tUInt8 METH_RDY_inputPipes_3_enq();
  tUInt8 METH_inputPipes_3_notFull();
  tUInt8 METH_RDY_inputPipes_3_notFull();
  void METH_inputPipes_4_enq(tUInt32 ARG_inputPipes_4_enq_v);
  tUInt8 METH_RDY_inputPipes_4_enq();
  tUInt8 METH_inputPipes_4_notFull();
  tUInt8 METH_RDY_inputPipes_4_notFull();
  void METH_inputPipes_5_enq(tUInt32 ARG_inputPipes_5_enq_v);
  tUInt8 METH_RDY_inputPipes_5_enq();
  tUInt8 METH_inputPipes_5_notFull();
  tUInt8 METH_RDY_inputPipes_5_notFull();
  tUWide METH_startCopy_PipeOut_first();
  tUInt8 METH_RDY_startCopy_PipeOut_first();
  void METH_startCopy_PipeOut_deq();
  tUInt8 METH_RDY_startCopy_PipeOut_deq();
  tUInt8 METH_startCopy_PipeOut_notEmpty();
  tUInt8 METH_RDY_startCopy_PipeOut_notEmpty();
  tUWide METH_readPage_PipeOut_first();
  tUInt8 METH_RDY_readPage_PipeOut_first();
  void METH_readPage_PipeOut_deq();
  tUInt8 METH_RDY_readPage_PipeOut_deq();
  tUInt8 METH_readPage_PipeOut_notEmpty();
  tUInt8 METH_RDY_readPage_PipeOut_notEmpty();
  tUWide METH_writePage_PipeOut_first();
  tUInt8 METH_RDY_writePage_PipeOut_first();
  void METH_writePage_PipeOut_deq();
  tUInt8 METH_RDY_writePage_PipeOut_deq();
  tUInt8 METH_writePage_PipeOut_notEmpty();
  tUInt8 METH_RDY_writePage_PipeOut_notEmpty();
  tUInt32 METH_sendTest_PipeOut_first();
  tUInt8 METH_RDY_sendTest_PipeOut_first();
  void METH_sendTest_PipeOut_deq();
  tUInt8 METH_RDY_sendTest_PipeOut_deq();
  tUInt8 METH_sendTest_PipeOut_notEmpty();
  tUInt8 METH_RDY_sendTest_PipeOut_notEmpty();
  tUInt64 METH_addWriteHostBuffer_PipeOut_first();
  tUInt8 METH_RDY_addWriteHostBuffer_PipeOut_first();
  void METH_addWriteHostBuffer_PipeOut_deq();
  tUInt8 METH_RDY_addWriteHostBuffer_PipeOut_deq();
  tUInt8 METH_addWriteHostBuffer_PipeOut_notEmpty();
  tUInt8 METH_RDY_addWriteHostBuffer_PipeOut_notEmpty();
  tUInt64 METH_addReadHostBuffer_PipeOut_first();
  tUInt8 METH_RDY_addReadHostBuffer_PipeOut_first();
  void METH_addReadHostBuffer_PipeOut_deq();
  tUInt8 METH_RDY_addReadHostBuffer_PipeOut_deq();
  tUInt8 METH_addReadHostBuffer_PipeOut_notEmpty();
  tUInt8 METH_RDY_addReadHostBuffer_PipeOut_notEmpty();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkFlashRequestWrapperPipes &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkFlashRequestWrapperPipes &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkFlashRequestWrapperPipes &backing);
};

#endif /* ifndef __mkFlashRequestWrapperPipes_h__ */
