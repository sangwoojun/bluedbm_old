/*
 * Generated by Bluespec Compiler, version 2013.12.beta1 (build 33034, 2013-12-02)
 * 
 * On Thu Jul  3 14:49:24 EDT 2014
 * 
 */

/* Generation options: */
#ifndef __mkPlatformIndicationProxySynth_h__
#define __mkPlatformIndicationProxySynth_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkPlatformIndicationProxySynth module */
class MOD_mkPlatformIndicationProxySynth : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_interruptEnableReg;
  MOD_Reg<tUInt32> INST_outOfRangeReadCountReg;
  MOD_Reg<tUInt32> INST_outOfRangeWriteCount;
  MOD_Reg<tUInt32> INST_p_outOfRangeWriteCount;
  MOD_Reg<tUInt8> INST_p_putEnable;
  MOD_Reg<tUInt32> INST_p_putFailedrequestFifo_count;
  MOD_Reg<tUInt32> INST_p_putFailedrequestFifo_fbnbuff;
  MOD_Fifo<tUInt32> INST_p_putFailedrequestFifo_fifo;
  MOD_Reg<tUInt32> INST_p_requestFiredCount;
  MOD_Wire<tUInt8> INST_p_requestFiredPulse;
  MOD_Reg<tUInt32> INST_rawWordTestresponseFifo_count;
  MOD_Fifo<tUInt64> INST_rawWordTestresponseFifo_fifo;
  MOD_Fifo<tUInt32> INST_req_ar_fifo;
  MOD_Fifo<tUInt32> INST_req_aw_fifo;
  MOD_Reg<tUInt32> INST_requestWordsresponseFifo_count;
  MOD_Fifo<tUInt32> INST_requestWordsresponseFifo_fifo;
  MOD_Reg<tUInt32> INST_sendKeyresponseFifo_count;
  MOD_Fifo<tUInt64> INST_sendKeyresponseFifo_fifo;
  MOD_Reg<tUInt32> INST_sendWord4responseFifo_count;
  MOD_Fifo<tUInt32> INST_sendWord4responseFifo_fifo;
  MOD_Reg<tUInt32> INST_sendWord8responseFifo_count;
  MOD_Fifo<tUInt64> INST_sendWord8responseFifo_fifo;
  MOD_Fifo<tUInt8> INST_slaveBrespFifo;
  MOD_Reg<tUInt8> INST_slaveRS;
  MOD_Fifo<tUInt32> INST_slaveReadAddrFifos_0;
  MOD_Fifo<tUInt32> INST_slaveReadAddrFifos_1;
  MOD_Reg<tUInt32> INST_slaveReadAddrReg;
  MOD_Reg<tUInt8> INST_slaveReadBurstCountReg;
  MOD_Fifo<tUInt32> INST_slaveReadDataFifos_0;
  MOD_Fifo<tUInt32> INST_slaveReadDataFifos_1;
  MOD_Fifo<tUInt8> INST_slaveReadReqInfoFifo;
  MOD_Reg<tUInt8> INST_slaveReadTagReg;
  MOD_Reg<tUInt8> INST_slaveWS;
  MOD_Fifo<tUInt32> INST_slaveWriteAddrFifos_0;
  MOD_Fifo<tUInt32> INST_slaveWriteAddrFifos_1;
  MOD_Reg<tUInt32> INST_slaveWriteAddrReg;
  MOD_Reg<tUInt8> INST_slaveWriteBurstCountReg;
  MOD_Fifo<tUInt32> INST_slaveWriteDataFifos_0;
  MOD_Fifo<tUInt32> INST_slaveWriteDataFifos_1;
  MOD_Reg<tUInt8> INST_slaveWriteTagReg;
  MOD_Reg<tUInt32> INST_underflowReadCountReg;
 
 /* Constructor */
 public:
  MOD_mkPlatformIndicationProxySynth(tSimStateHdl simHdl,
				     char const *name,
				     Module *parent,
				     tUInt32 ARG_id);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt32 PORT_id;
 
 /* Publicly accessible definitions */
 public:
  tUInt32 DEF_slaveReadAddrFifos_1_first____d100;
  tUInt32 DEF_slaveReadAddrFifos_0_first____d44;
  tUInt32 DEF_slaveWriteAddrFifos_1_first____d81;
  tUInt32 DEF_slaveWriteAddrFifos_0_first____d34;
  tUInt8 DEF_p_putFailedrequestFifo_count_6_EQ_0___d57;
  tUInt8 DEF_slaveReadBurstCountReg_EQ_0___d2;
  tUInt32 DEF__read__h3511;
  tUInt8 DEF_x__h8620;
  tUInt8 DEF__read__h415;
  tUInt8 DEF_ws__h8607;
  tUInt8 DEF_x_select__h2373;
  tUInt8 DEF_ws__h8699;
  tUInt8 DEF_x__h8536;
  tUInt8 DEF_y_avValue_snd_snd_fst__h8767;
  tUInt8 DEF_y_avValue_snd_fst__h8762;
  tUInt8 DEF_wbc__h8701;
  tUInt8 DEF_sendWord8responseFifo_fifo_notEmpty____d94;
  tUInt32 DEF_req_aw_fifo_first____d250;
  tUInt8 DEF_slaveReadReqInfoFifo_first____d235;
  tUInt8 DEF_requestWordsresponseFifo_fifo_notEmpty____d179;
  tUInt8 DEF_rawWordTestresponseFifo_fifo_notEmpty____d159;
  tUInt8 DEF_sendKeyresponseFifo_fifo_notEmpty____d139;
  tUInt8 DEF_sendWord4responseFifo_fifo_notEmpty____d120;
  tUInt8 DEF_slaveWriteBurstCountReg_48_EQ_0___d249;
  tUInt8 DEF_IF_slaveWriteBurstCountReg_48_EQ_0_49_THEN_req_ETC___d264;
  tUInt8 DEF_NOT_requestWordsresponseFifo_fifo_notEmpty__79___d180;
  tUInt8 DEF_NOT_rawWordTestresponseFifo_fifo_notEmpty__59___d160;
  tUInt8 DEF_NOT_sendKeyresponseFifo_fifo_notEmpty__39___d140;
  tUInt8 DEF_NOT_sendWord4responseFifo_fifo_notEmpty__20___d121;
  tUInt8 DEF_NOT_sendWord8responseFifo_fifo_notEmpty__4___d95;
 
 /* Local definitions */
 private:
  tUInt32 DEF_x__h4026;
  tUInt32 DEF_v___1__h3329;
  tUInt32 DEF_x__h3814;
  tUInt32 DEF_v___1__h8175;
  tUInt32 DEF_x__h8326;
  tUInt32 DEF_v___1__h8180;
  tUInt8 DEF_interruptEnableReg__h8187;
  tUInt32 DEF_x__h7179;
  tUInt8 DEF_requestWordsresponseFifo_fifo_notEmpty__79_OR__ETC___d205;
 
 /* Rules */
 public:
  void RL_slaveReadAddressGenerator();
  void RL_p_requestFiredIncrement();
  void RL_p_writeCtrlReg();
  void RL_p_readCtrlReg();
  void RL_p_readWriteFifo();
  void RL_p_slaveWriteputFailed();
  void RL_p_handleputFailedrequest();
  void RL_p_handleputFailedrequestFailure();
  void RL_p_outOfRangeWrite();
  void RL_writeCtrlReg();
  void RL_writeIndicatorFifo();
  void RL_sendWord8read();
  void RL_sendWord4read();
  void RL_sendKeyread();
  void RL_rawWordTestread();
  void RL_requestWordsread();
  void RL_readCtrlReg();
  void RL_outOfRangeRead();
 
 /* Methods */
 public:
  tUInt32 METH_portalIfc_ifcType();
  tUInt8 METH_RDY_portalIfc_ifcType();
  tUInt32 METH_portalIfc_ifcId();
  tUInt8 METH_RDY_portalIfc_ifcId();
  void METH_portalIfc_slave_read_server_readReq_put(tUInt32 ARG_portalIfc_slave_read_server_readReq_put);
  tUInt8 METH_RDY_portalIfc_slave_read_server_readReq_put();
  tUInt64 METH_portalIfc_slave_read_server_readData_get();
  tUInt8 METH_RDY_portalIfc_slave_read_server_readData_get();
  void METH_portalIfc_slave_write_server_writeReq_put(tUInt32 ARG_portalIfc_slave_write_server_writeReq_put);
  tUInt8 METH_RDY_portalIfc_slave_write_server_writeReq_put();
  void METH_portalIfc_slave_write_server_writeData_put(tUInt64 ARG_portalIfc_slave_write_server_writeData_put);
  tUInt8 METH_RDY_portalIfc_slave_write_server_writeData_put();
  tUInt8 METH_portalIfc_slave_write_server_writeDone_get();
  tUInt8 METH_RDY_portalIfc_slave_write_server_writeDone_get();
  tUInt8 METH_portalIfc_interrupt__read();
  tUInt8 METH_RDY_portalIfc_interrupt__read();
  void METH_ifc_sendWord8(tUInt64 ARG_ifc_sendWord8_word);
  tUInt8 METH_RDY_ifc_sendWord8();
  void METH_ifc_sendWord4(tUInt32 ARG_ifc_sendWord4_word);
  tUInt8 METH_RDY_ifc_sendWord4();
  void METH_ifc_sendKey(tUInt64 ARG_ifc_sendKey_key);
  tUInt8 METH_RDY_ifc_sendKey();
  void METH_ifc_rawWordTest(tUInt64 ARG_ifc_rawWordTest_data);
  tUInt8 METH_RDY_ifc_rawWordTest();
  void METH_ifc_requestWords(tUInt32 ARG_ifc_requestWords_words);
  tUInt8 METH_RDY_ifc_requestWords();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkPlatformIndicationProxySynth &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkPlatformIndicationProxySynth &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkPlatformIndicationProxySynth &backing);
};

#endif /* ifndef __mkPlatformIndicationProxySynth_h__ */
